<?xml version="1.0" encoding="UTF-8" ?>
<project name="rentalincome_dw.sql" id="PostgreSQL-206" database="PostgreSQL" >
	<schema name="if" options="IF NOT EXISTS &quot;instance&quot;" />
	<schema name="instance" >
		<table name="dim_buildingclass" spec="" >
			<column name="buildingclass_id" type="integer" jt="4" mandatory="y" />
			<column name="buildingclass_description" type="varchar" length="100" jt="12" />
			<index name="pk_dim_buildingclass" unique="PRIMARY_KEY" >
				<column name="buildingclass_id" />
			</index>
		</table>
		<table name="dim_condo" spec="" >
			<column name="condo_id" type="integer" jt="4" mandatory="y" />
			<column name="boro_block_lot" type="varchar" length="100" jt="12" />
			<column name="condo_section" type="varchar" length="100" jt="12" />
			<index name="pk_dim_condo" unique="PRIMARY_KEY" >
				<column name="condo_id" />
			</index>
		</table>
		<table name="dim_date" spec="" >
			<column name="date_id" type="integer" jt="4" mandatory="y" />
			<column name="year_built" type="integer" jt="4" />
			<index name="pk_dim_yearbuilt" unique="PRIMARY_KEY" >
				<column name="date_id" />
			</index>
		</table>
		<table name="dim_location" spec="" >
			<column name="location_id" type="integer" jt="4" mandatory="y" />
			<column name="street" type="varchar" length="100" jt="12" />
			<column name="neighborhood" type="varchar" length="100" jt="12" />
			<index name="pk_dim_location" unique="PRIMARY_KEY" >
				<column name="location_id" />
			</index>
		</table>
		<table name="facts_rentalincome" spec="" >
			<column name="fact_id" type="bigint" jt="-5" mandatory="y" />
			<column name="condo_id" type="integer" jt="4" mandatory="y" />
			<column name="date_id" type="integer" jt="4" mandatory="y" />
			<column name="gross_sqft" type="integer" jt="4" />
			<column name="estimated_gross_income" type="integer" jt="4" />
			<column name="gross_income_per_sqft" type="numeric" length="100" decimal="2" jt="2" />
			<column name="estimated_expense" type="integer" jt="4" />
			<column name="expense_per_sqft" type="numeric" length="100" decimal="2" jt="2" />
			<column name="netoperating_income" type="integer" jt="4" />
			<column name="full_marketvalue" type="integer" jt="4" />
			<column name="marketvalue_per_sqft" type="numeric" length="100" decimal="2" jt="2" />
			<column name="buildingclass_id" type="integer" jt="4" mandatory="y" />
			<column name="location_id" type="integer" jt="4" mandatory="y" />
			<column name="total_units" type="integer" jt="4" />
			<fk name="fk_facts_rentalincome_dim_condo" to_schema="instance" to_table="dim_condo" >
				<fk_column name="condo_id" pk="condo_id" />
			</fk>
			<fk name="fk_facts_rentalincome_dim_date" to_schema="instance" to_table="dim_date" >
				<fk_column name="date_id" pk="date_id" />
			</fk>
			<fk name="fk_facts_rentalincome_dim_location" to_schema="instance" to_table="dim_location" >
				<fk_column name="location_id" pk="location_id" />
			</fk>
			<fk name="fk_facts_rentalincome_dim_buildingclass" to_schema="instance" to_table="dim_buildingclass" >
				<fk_column name="buildingclass_id" pk="buildingclass_id" />
			</fk>
		</table>
	</schema>
	<layout name="Layout" id="Layout-985" confirmed="y" show_relation="columns" >
		<entity schema="instance" name="dim_buildingclass" color="BEF4C7" x="51" y="51" />
		<entity schema="instance" name="dim_condo" color="BEF4C7" x="680" y="102" />
		<entity schema="instance" name="dim_date" color="BEF4C7" x="680" y="340" />
		<entity schema="instance" name="dim_location" color="BEF4C7" x="68" y="408" />
		<entity schema="instance" name="facts_rentalincome" color="F3BEF4" x="340" y="187" />
		<script name="SQL_Editor" id="Editor-12ba" language="SQL" confirmed="y" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "instance";

CREATE  TABLE "instance".dim_buildingclass ( 
	buildingclass_id     integer  NOT NULL  ,
	buildingclass_description varchar(100)    ,
    total_units          integer  NOT NULL  ,
	CONSTRAINT pk_dim_buildingclass PRIMARY KEY ( buildingclass_id )
 );

CREATE  TABLE "instance".dim_condo ( 
	condo_id             integer  NOT NULL  ,
	boro_block_lot       varchar(100)    ,
	condo_section        varchar(100)    ,
	CONSTRAINT pk_dim_condo PRIMARY KEY ( condo_id )
 );

CREATE  TABLE "instance".dim_date ( 
	date_id              integer  NOT NULL  ,
	year_built           integer    ,
	CONSTRAINT pk_dim_yearbuilt PRIMARY KEY ( date_id )
 );

CREATE  TABLE "instance".dim_location ( 
	location_id          integer  NOT NULL  ,
	street_number        integer    ,
	street               varchar(100)    ,
	neighborhood         varchar(100)    ,
	CONSTRAINT pk_dim_location PRIMARY KEY ( location_id )
 );

CREATE  TABLE "instance".facts_rentalincome ( 
	fact_id              bigint  NOT NULL  ,
	condo_id             integer  NOT NULL  ,
	date_id              integer  NOT NULL  ,
	gross_sqft           integer    ,
	estimated_gross_income integer    ,
	gross_income_per_sqft numeric(100,2)    ,
	estimated_expense    integer    ,
	expense_per_sqft     numeric(100,2)    ,
	netoperating_income  integer    ,
	full_marketvalue     integer    ,
	marketvalue_per_sqft numeric(100,2)    ,
	buildingclass_id     integer  NOT NULL  ,
	location_id          integer  NOT NULL  ,
	CONSTRAINT pk_facts_rentalincome PRIMARY KEY ( fact_id, condo_id )
 );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_condo FOREIGN KEY ( condo_id ) REFERENCES "instance".dim_condo( condo_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_date FOREIGN KEY ( date_id ) REFERENCES "instance".dim_date( date_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_location FOREIGN KEY ( location_id ) REFERENCES "instance".dim_location( location_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_buildingclass FOREIGN KEY ( buildingclass_id ) REFERENCES "instance".dim_buildingclass( buildingclass_id );
]]></string>
		</script>
		<script name="SQL_Editor_001" id="Editor-5b" language="SQL" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "instance";

CREATE  TABLE "instance".dim_buildingclass ( 
	buildingclass_id     integer  NOT NULL  ,
	buildingclass_description varchar(100)    ,
	total_units          integer    ,
	CONSTRAINT pk_dim_buildingclass PRIMARY KEY ( buildingclass_id )
 );

CREATE  TABLE "instance".dim_condo ( 
	condo_id             integer  NOT NULL  ,
	boro_block_lot       varchar(100)    ,
	condo_section        varchar(100)    ,
	CONSTRAINT pk_dim_condo PRIMARY KEY ( condo_id )
 );

CREATE  TABLE "instance".dim_date ( 
	date_id              integer  NOT NULL  ,
	year_built           integer    ,
	CONSTRAINT pk_dim_yearbuilt PRIMARY KEY ( date_id )
 );

CREATE  TABLE "instance".dim_location ( 
	location_id          integer  NOT NULL  ,
	street_number        integer    ,
	street               varchar(100)    ,
	neighborhood         varchar(100)    ,
	CONSTRAINT pk_dim_location PRIMARY KEY ( location_id )
 );

CREATE  TABLE "instance".facts_rentalincome ( 
	fact_id              bigint  NOT NULL  ,
	condo_id             integer  NOT NULL  ,
	date_id              integer  NOT NULL  ,
	gross_sqft           integer    ,
	estimated_gross_income integer    ,
	gross_income_per_sqft numeric(100,2)    ,
	estimated_expense    integer    ,
	expense_per_sqft     numeric(100,2)    ,
	netoperating_income  integer    ,
	full_marketvalue     integer    ,
	marketvalue_per_sqft numeric(100,2)    ,
	buildingclass_id     integer  NOT NULL  ,
	location_id          integer  NOT NULL  ,
	CONSTRAINT pk_facts_rentalincome PRIMARY KEY ( fact_id, condo_id )
 );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_condo FOREIGN KEY ( condo_id ) REFERENCES "instance".dim_condo( condo_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_date FOREIGN KEY ( date_id ) REFERENCES "instance".dim_date( date_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_location FOREIGN KEY ( location_id ) REFERENCES "instance".dim_location( location_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_buildingclass FOREIGN KEY ( buildingclass_id ) REFERENCES "instance".dim_buildingclass( buildingclass_id );
]]></string>
		</script>
		<script name="SQL_Editor_002" id="Editor-f3b" language="SQL" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "instance";

CREATE  TABLE "instance".dim_buildingclass ( 
	buildingclass_id     integer  NOT NULL  ,
	buildingclass_description varchar(100)    ,
	CONSTRAINT pk_dim_buildingclass PRIMARY KEY ( buildingclass_id )
 );

CREATE  TABLE "instance".dim_condo ( 
	condo_id             integer  NOT NULL  ,
	boro_block_lot       varchar(100)    ,
	condo_section        varchar(100)    ,
	CONSTRAINT pk_dim_condo PRIMARY KEY ( condo_id )
 );

CREATE  TABLE "instance".dim_date ( 
	date_id              integer  NOT NULL  ,
	year_built           integer    ,
	CONSTRAINT pk_dim_yearbuilt PRIMARY KEY ( date_id )
 );

CREATE  TABLE "instance".dim_location ( 
	location_id          integer  NOT NULL  ,
	street_number        integer    ,
	street               varchar(100)    ,
	neighborhood         varchar(100)    ,
	CONSTRAINT pk_dim_location PRIMARY KEY ( location_id )
 );

CREATE  TABLE "instance".facts_rentalincome ( 
	fact_id              bigint  NOT NULL  ,
	condo_id             integer  NOT NULL  ,
	date_id              integer  NOT NULL  ,
	gross_sqft           integer    ,
	estimated_gross_income integer    ,
	gross_income_per_sqft numeric(100,2)    ,
	estimated_expense    integer    ,
	expense_per_sqft     numeric(100,2)    ,
	netoperating_income  integer    ,
	full_marketvalue     integer    ,
	marketvalue_per_sqft numeric(100,2)    ,
	buildingclass_id     integer  NOT NULL  ,
	location_id          integer  NOT NULL  ,
	total_units          integer    ,
	CONSTRAINT pk_facts_rentalincome PRIMARY KEY ( fact_id, condo_id )
 );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_condo FOREIGN KEY ( condo_id ) REFERENCES "instance".dim_condo( condo_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_date FOREIGN KEY ( date_id ) REFERENCES "instance".dim_date( date_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_location FOREIGN KEY ( location_id ) REFERENCES "instance".dim_location( location_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_buildingclass FOREIGN KEY ( buildingclass_id ) REFERENCES "instance".dim_buildingclass( buildingclass_id );]]></string>
		</script>
		<script name="SQL_Editor_003" id="Editor-1def" language="SQL" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "instance";

CREATE  TABLE "instance".dim_buildingclass ( 
	buildingclass_id     integer  NOT NULL  ,
	buildingclass_description varchar(100)    ,
	CONSTRAINT pk_dim_buildingclass PRIMARY KEY ( buildingclass_id )
 );

CREATE  TABLE "instance".dim_condo ( 
	condo_id             integer  NOT NULL  ,
	boro_block_lot       varchar(100)    ,
	condo_section        varchar(100)    ,
	CONSTRAINT pk_dim_condo PRIMARY KEY ( condo_id )
 );

CREATE  TABLE "instance".dim_date ( 
	date_id              integer  NOT NULL  ,
	year_built           integer    ,
	CONSTRAINT pk_dim_yearbuilt PRIMARY KEY ( date_id )
 );

CREATE  TABLE "instance".dim_location ( 
	location_id          integer  NOT NULL  ,
	street               varchar(100)    ,
	neighborhood         varchar(100)    ,
	CONSTRAINT pk_dim_location PRIMARY KEY ( location_id )
 );

CREATE  TABLE "instance".facts_rentalincome ( 
	fact_id              bigint  NOT NULL  ,
	condo_id             integer  NOT NULL  ,
	date_id              integer  NOT NULL  ,
	gross_sqft           integer    ,
	estimated_gross_income integer    ,
	gross_income_per_sqft numeric(100,2)    ,
	estimated_expense    integer    ,
	expense_per_sqft     numeric(100,2)    ,
	netoperating_income  integer    ,
	full_marketvalue     integer    ,
	marketvalue_per_sqft numeric(100,2)    ,
	buildingclass_id     integer  NOT NULL  ,
	location_id          integer  NOT NULL  ,
	total_units          integer    ,
	CONSTRAINT pk_facts_rentalincome PRIMARY KEY ( fact_id, condo_id )
 );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_condo FOREIGN KEY ( condo_id ) REFERENCES "instance".dim_condo( condo_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_date FOREIGN KEY ( date_id ) REFERENCES "instance".dim_date( date_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_location FOREIGN KEY ( location_id ) REFERENCES "instance".dim_location( location_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_buildingclass FOREIGN KEY ( buildingclass_id ) REFERENCES "instance".dim_buildingclass( buildingclass_id );
]]></string>
		</script>
		<script name="SQL_Editor_004" id="Editor-25ee" language="SQL" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "instance";

CREATE  TABLE "instance".dim_buildingclass ( 
	buildingclass_id     integer  NOT NULL  ,
	buildingclass_description varchar(100)    ,
	CONSTRAINT pk_dim_buildingclass PRIMARY KEY ( buildingclass_id )
 );

CREATE  TABLE "instance".dim_condo ( 
	condo_id             integer  NOT NULL  ,
	boro_block_lot       varchar(100)    ,
	condo_section        varchar(100)    ,
	CONSTRAINT pk_dim_condo PRIMARY KEY ( condo_id )
 );

CREATE  TABLE "instance".dim_date ( 
	date_id              integer  NOT NULL  ,
	year_built           integer    ,
	CONSTRAINT pk_dim_yearbuilt PRIMARY KEY ( date_id )
 );

CREATE  TABLE "instance".dim_location ( 
	location_id          integer  NOT NULL  ,
	street               varchar(100)    ,
	neighborhood         varchar(100)    ,
	CONSTRAINT pk_dim_location PRIMARY KEY ( location_id )
 );

CREATE  TABLE "instance".facts_rentalincome ( 
	fact_id              bigint  NOT NULL  ,
	condo_id             integer  NOT NULL  ,
	date_id              integer  NOT NULL  ,
	gross_sqft           integer    ,
	estimated_gross_income integer    ,
	gross_income_per_sqft numeric(100,2)    ,
	estimated_expense    integer    ,
	expense_per_sqft     numeric(100,2)    ,
	netoperating_income  integer    ,
	full_marketvalue     integer    ,
	marketvalue_per_sqft numeric(100,2)    ,
	buildingclass_id     integer  NOT NULL  ,
	location_id          integer  NOT NULL  ,
	total_units          integer    
 );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_condo FOREIGN KEY ( condo_id ) REFERENCES "instance".dim_condo( condo_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_date FOREIGN KEY ( date_id ) REFERENCES "instance".dim_date( date_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_location FOREIGN KEY ( location_id ) REFERENCES "instance".dim_location( location_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_buildingclass FOREIGN KEY ( buildingclass_id ) REFERENCES "instance".dim_buildingclass( buildingclass_id );
]]></string>
		</script>
		<script name="SQL_Editor_005" id="Editor-149b" language="SQL" >
			<string><![CDATA[CREATE SCHEMA IF NOT EXISTS "instance";

CREATE  TABLE "instance".dim_buildingclass ( 
	buildingclass_id     integer  NOT NULL  ,
	buildingclass_description varchar(100)    ,
	CONSTRAINT pk_dim_buildingclass PRIMARY KEY ( buildingclass_id )
 );

CREATE  TABLE "instance".dim_condo ( 
	condo_id             integer  NOT NULL  ,
	boro_block_lot       varchar(100)    ,
	condo_section        varchar(100)    ,
	CONSTRAINT pk_dim_condo PRIMARY KEY ( condo_id )
 );

CREATE  TABLE "instance".dim_date ( 
	date_id              integer  NOT NULL  ,
	year_built           integer    ,
	CONSTRAINT pk_dim_yearbuilt PRIMARY KEY ( date_id )
 );

CREATE  TABLE "instance".dim_location ( 
	location_id          integer  NOT NULL  ,
	street               varchar(100)    ,
	neighborhood         varchar(100)    ,
	CONSTRAINT pk_dim_location PRIMARY KEY ( location_id )
 );

CREATE  TABLE "instance".facts_rentalincome ( 
	fact_id              bigint  NOT NULL  ,
	condo_id             integer  NOT NULL  ,
	date_id              integer  NOT NULL  ,
	gross_sqft           integer    ,
	estimated_gross_income integer    ,
	gross_income_per_sqft numeric(100,2)    ,
	estimated_expense    integer    ,
	expense_per_sqft     numeric(100,2)    ,
	netoperating_income  integer    ,
	full_marketvalue     integer    ,
	marketvalue_per_sqft numeric(100,2)    ,
	buildingclass_id     integer  NOT NULL  ,
	location_id          integer  NOT NULL  ,
	total_units          integer    
 );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_condo FOREIGN KEY ( condo_id ) REFERENCES "instance".dim_condo( condo_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_date FOREIGN KEY ( date_id ) REFERENCES "instance".dim_date( date_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_location FOREIGN KEY ( location_id ) REFERENCES "instance".dim_location( location_id );

ALTER TABLE "instance".facts_rentalincome ADD CONSTRAINT fk_facts_rentalincome_dim_buildingclass FOREIGN KEY ( buildingclass_id ) REFERENCES "instance".dim_buildingclass( buildingclass_id );
]]></string>
		</script>
	</layout>
</project>